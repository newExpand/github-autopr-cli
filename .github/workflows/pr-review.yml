# PR Review Bot Workflow
name: PR Review Bot

on:
  pull_request:
    types: [opened, synchronize]
  pull_request_review_comment:
    types: [created]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]

# 명시적으로 권한 설정 강화
permissions:
  contents: read
  pull-requests: write
  issues: write
  id-token: write # OIDC 인증에 필요한 권한 추가

jobs:
  review:
    runs-on: ubuntu-latest
    # issue_comment 이벤트가 PR 관련 댓글인 경우에만 실행
    if: |
      (github.event_name != 'issue_comment') ||
      (github.event_name == 'issue_comment' && github.event.issue.pull_request)

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Debug Event Info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "Comment author: ${{ github.event.comment.user.login }}"
            echo "Is bot comment: ${{ contains(github.event.comment.user.login, 'bot') || github.event.comment.user.login == 'github-actions[bot]' }}"
          fi

      # 봇이 작성한 코멘트에는 응답하지 않음
      - name: Run PR Review Bot
        if: |
          !(github.event_name == 'issue_comment' && 
            (contains(github.event.comment.user.login, 'bot') || 
             github.event.comment.user.login == 'github-actions[bot]'))
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AI_PROVIDER: "openrouter"
        run: npx autopr review-bot
